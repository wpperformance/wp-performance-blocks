{"version":3,"file":"github-infos/index.js","mappings":";;;;;;;;;;;;;;;;;;;AAAsD;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASC,IAAIA,CAAA,EAAG;EAC9B,OACCC,oDAAA;IAAA,GAAOF,sEAAa,CAAC;EAAC,GAAE,cAErB,CAAC;AAEN;;;;;;;;;;AChBA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;ACNsD;;AAEtD;AACA;AACA;AAC6B;AACO;;AAEpC;AACA;AACA;AACA;AACA;AACAG,oEAAiB,CAACC,6CAAa,EAAE;EAChC;AACD;AACA;EACCE,IAAI,EAAEL,gDAAIA;AACX,CAAC,CAAC,C","sources":["webpack://wp-performance-blocks/./src/github-infos/edit.js","webpack://wp-performance-blocks/external window \"React\"","webpack://wp-performance-blocks/external window [\"wp\",\"blockEditor\"]","webpack://wp-performance-blocks/external window [\"wp\",\"blocks\"]","webpack://wp-performance-blocks/webpack/bootstrap","webpack://wp-performance-blocks/webpack/runtime/compat get default export","webpack://wp-performance-blocks/webpack/runtime/define property getters","webpack://wp-performance-blocks/webpack/runtime/hasOwnProperty shorthand","webpack://wp-performance-blocks/webpack/runtime/make namespace object","webpack://wp-performance-blocks/./src/github-infos/index.js"],"sourcesContent":["import {useBlockProps} from '@wordpress/block-editor';\n\n/**\n * The edit function describes the structure of your block in the context of the\n * editor. This represents what the editor will render when the block is used.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-edit-save/#edit\n *\n * @return {Element} Element to render.\n */\nexport default function Edit() {\n\treturn (\n\t\t<p {...useBlockProps()}>\n\t\t\tGithub Infos\n\t\t</p>\n\t);\n}\n","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from \"@wordpress/blocks\";\n\n/**\n * Internal dependencies\n */\nimport Edit from \"./edit.js\";\nimport metadata from \"./block.json\";\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nregisterBlockType(metadata.name, {\n\t/**\n\t * @see ./edit.js\n\t */\n\tedit: Edit,\n});\n"],"names":["useBlockProps","Edit","createElement","registerBlockType","metadata","name","edit"],"sourceRoot":""}